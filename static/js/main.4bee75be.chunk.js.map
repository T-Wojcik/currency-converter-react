{"version":3,"sources":["App/Header/index.js","App/currencies.js","App/Form/Result/index.js","App/Form/index.js","App/Table/index.js","App/index.js","serviceWorker.js","index.js"],"names":["Header","title","className","currencies","short","name","rate","Result","result","undefined","fromAmount","toFixed","toAmount","currency","Form","calculateResult","useState","amount","setAmount","setCurrency","onSubmit","event","preventDefault","value","onChange","target","min","type","step","required","map","key","Table","App","setResult","find","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4bee75be.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\"\r\n\r\nexport const Header = ({ title }) => (\r\n    <h1 className=\"header\"> {title}\r\n\r\n        <q className=\"header__quote\">Centu≈õ</q>\r\n\r\n         üòé</h1>\r\n);\r\n\r\n","export const currencies = [\r\n    {\r\n        short: \"USD\",\r\n        name: \"Dolar ameryka≈Ñski\",\r\n        rate: 3.89,\r\n    },\r\n    {\r\n        short: \"EUR\",\r\n        name: \"Euro\",\r\n        rate: 4.39,\r\n    },\r\n    {\r\n        short: \"GBP\",\r\n        name: \"Funt szterling\",\r\n        rate: 4.89,\r\n    },\r\n];","import React from 'react';\r\n\r\nexport const Result = ({ result }) => (\r\n    <p className=\"form__paragraph\">\r\n        <span className=\"form__labelText form__labelText--smaller\"> {\r\n            result !== undefined && (\r\n                <>\r\n                    {result.fromAmount.toFixed(2)}&nbsp;PLN&nbsp;=&nbsp;\r\n\r\n                <strong>\r\n                        {result.toAmount.toFixed(2)}&nbsp;{result.currency}\r\n                    </strong>\r\n                </>\r\n            )}\r\n        </span>\r\n    </p>\r\n);\r\n","import React, { useState } from 'react';\r\nimport { Result } from \"./Result\";\r\nimport { currencies } from \"../currencies\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ calculateResult, result }) => {\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={onFormSubmit} className=\"form\">\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">Wymiana</legend>\r\n\r\n                <p className=\"form__paragraph\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__labelText \">Kwota w z≈Ç* </span>\r\n                        <input\r\n                            value={amount}\r\n                            onChange={({ target }) => setAmount(target.value)}\r\n                            min=\"1\"\r\n                            className=\"form__field\"\r\n                            type=\"number\"\r\n                            step=\"any\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                </p>\r\n\r\n                <p className=\"form__paragraph\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__labelText\">Wymie≈Ñ na: </span>\r\n                        <select\r\n                            className=\"form__field\"\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                        >\r\n                            {currencies.map((currency => (\r\n                                <option\r\n                                    key={currency.short}\r\n                                    value={currency.short}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            )))}\r\n                        </select>\r\n                    </label>\r\n                </p>\r\n\r\n                <p className=\"form__paragraph\">\r\n                    <button\r\n                        className=\"form__button\"\r\n                    >Przelicz\r\n                </button>\r\n                </p>\r\n                <Result result={result} />\r\n            </fieldset>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nexport const Table = () => (\r\n    <table className=\"table\">\r\n        <caption className=\"table__caption\">*Kurs walut wed≈Çug NBP na dzie≈Ñ 15.06.2020 godz.17:30</caption>\r\n        <tbody>\r\n            <tr className=\"table__row\">\r\n                <th className=\"table__cell table__cell--header\">Lp.</th>\r\n                <th className=\"table__cell table__cell--header\">Nazwa waluty</th>\r\n                <th className=\"table__cell table__cell--header\">Kupno</th>\r\n                <th className=\"table__cell table__cell--header\">Sprzeda≈º</th>\r\n            </tr>\r\n            <tr className=\"table__row\">\r\n                <th className=\"table__cell table__cell--header\">Lp. 1</th>\r\n                <td className=\"table__cell\">Euro</td>\r\n                <td className=\"table__cell\">4,3990</td>\r\n                <td className=\"table__cell\">4,4878</td>\r\n            </tr>\r\n            <tr className=\"table__row\">\r\n                <th className=\"table__cell table__cell--header\">Lp. 1</th>\r\n                <td className=\"table__cell\">Dolar</td>\r\n                <td className=\"table__cell\">3,8922</td>\r\n                <td className=\"table__cell\">3,9708</td>\r\n            </tr>\r\n            <tr className=\"table__row\">\r\n                <th className=\"table__cell table__cell--header\">Lp. 1</th>\r\n                <td className=\"table__cell\">Funt szterling</td>\r\n                <td className=\"table__cell\">4,8997</td>\r\n                <td className=\"table__cell\">4,9987</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n);","import React, { useState } from 'react';\nimport { Header } from \"./Header/index\";\nimport \"./app.css\";\nimport { currencies } from \"./currencies\";\nimport Form from \"./Form\";\nimport { Table } from \"./Table\";\n\nfunction App() {\n\n  const [result, setResult] = useState();\n\n  const calculateResult = (currency, amount) => {\n    const rate = currencies\n      .find(({ short }) => short === currency)\n      .rate;\n\n    setResult({\n      fromAmount: +amount,\n      toAmount: amount / rate,\n      currency,\n    })\n  };\n\n  return (\n    <div className=\"app\">\n      <Header title={\"Najkorzystniejszy wirtualny kantor \"} />\n      <Form\n        result={result}\n        calculateResult={calculateResult}\n      />\n      <Table />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}